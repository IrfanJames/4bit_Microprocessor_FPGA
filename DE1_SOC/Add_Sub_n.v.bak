// B input selects b/w add & subtract

module Adder_n(B,Cin,X,Y,S,Cout);
	parameter n=4;
	input Cin,B;
	input [n-1:0]X,Y;
	output Cout;
	output [n-1:0]S;
	wire [n:0]C;
	wire [n-1:0]Y0;
	
	assign Y0[0] = B^Y[0];
	assign Y0[1] = B^Y[1];
	assign Y0[2] = B^Y[2];
	assign Y0[3] = B^Y[3];
	
	genvar i;
	assign C[0]=Cin;
	assign Cout=C[n];
	
	generate
	for(i=0;i<=n-1;i=i+1)
		begin:addbit
		fulladd stage(C[i],X[i],Y0[i],S[i],C[i+1]);
		end
	endgenerate
endmodule

module fulladd(Cin,x,y,s,Cout);
	input Cin,x,y;
	output s,Cout;
	
	assign s=x^y^Cin;
	assign Cout=(x&y)|(x&Cin)|(y&Cin);
endmodule
